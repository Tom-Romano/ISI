/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tp2.dessin;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.ArrayList;

/**
 *
 * @author tomromano
 */
public class PolyLinesDrawingArea extends javax.swing.JPanel {

    private enum STATE{
        NOT_DRAWING,DRAWING
    }
    private int x0=0,y0=0,x1=0,y1=0;

    private STATE etat;
    private ArrayList<Line> listL;
    
    private class Line{
        private int x0,y0,x1,y1;

        public Line(int x0, int y0, int x1, int y1) {
            this.x0 = x0;
            this.y0 = y0;
            this.x1 = x1;
            this.y1 = y1;
        }

        public int getX0() {
            return x0;
        }

        public int getY0() {
            return y0;
        }

        public int getX1() {
            return x1;
        }

        public int getY1() {
            return y1;
        }

        
        
        
    }
    /**
     * Creates new form PolyLinesDrawingArea
     */
    public PolyLinesDrawingArea() {
        initComponents();
        initStateMachine();
    }
    
    private void initStateMachine(){
        etat=STATE.NOT_DRAWING;
        this.listL=new ArrayList();
    }
    
     @Override
    protected void paintComponent(Graphics g){
        super.paintComponent(g);
        for(Line line:listL){
            g.setColor(Color.black);
            g.drawLine(line.getX0(),line.getY0(),line.getX1(),line.getY1());
        }
        switch(etat){
            case NOT_DRAWING:
                g.setColor(Color.black);
                g.drawLine(x0, y0, x1, y1);
                break;
            case DRAWING:
                g.setColor(Color.red);
                g.drawLine(x0, y0, x1, y1);
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        if (evt.getButton()==MouseEvent.BUTTON1){
            etat=STATE.DRAWING;
            leftMouseButtonClick(evt);
        }else if (evt.getButton()==MouseEvent.BUTTON3){
            rightMouseButtonClick(evt);
        }
    }//GEN-LAST:event_formMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        switch(etat){
            case NOT_DRAWING:
                //INTERDIT
                break;
            case DRAWING:
                etat=STATE.DRAWING;
                x1=evt.getX();
                y1=evt.getY();
                repaint();
                break;
               
        }
    }//GEN-LAST:event_formMouseMoved

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        if(evt.getKeyChar()=="Space"){
            spaceKeyTyped(evt);
        }
    }//GEN-LAST:event_formKeyTyped
    
    
    private void leftMouseButtonClick(MouseEvent evt){
        switch(etat){
            case NOT_DRAWING:
                //INTERDIT
                break;
            case DRAWING:
                etat=STATE.DRAWING;
                x0=evt.getX();
                y0=evt.getY();
                x1=evt.getX();
                y1=evt.getY();
                if(listL.size()==0){
                    Line l = new Line(x0,y0,x1,y1);
                    listL.add(l);
                }else{
                    Line l = new Line(listL.get(listL.size()-1).getX1(),listL.get(listL.size()-1).getY1(),x1,y1);
                    listL.add(l);
                }
                repaint();
                break;
        }
    }
    
    private void rightMouseButtonClick(MouseEvent evt){
        switch(etat){
            case NOT_DRAWING:
                break;
            case DRAWING:
                x0=evt.getX();
                y0=evt.getY();
                x1=evt.getX();
                y1=evt.getY();
                if(listL.size()==0){
                    //RIEN NE SE PASSE
                }else{
                    listL.remove(listL.get(listL.size()-1));
                }
                repaint();
                break;
        }
    }
    
    private void spaceKeyTyped(KeyEvent evt){
        switch(etat){
            case NOT_DRAWING:
                break;
            case DRAWING:
                etat=STATE.DRAWING;
                Line l = new Line(listL.get(0).getX0(),listL.get(0).getY0(),listL.get(listL.size()-1).getX1(),listL.get(listL.size()-1).getY1());
                listL.add(l);
                repaint();
                etat=STATE.NOT_DRAWING;
                break;
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
