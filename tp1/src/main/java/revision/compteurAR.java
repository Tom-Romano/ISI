/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package revision;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author tomromano
 */
public class compteurAR extends javax.swing.JFrame {

     public enum STATE {
         E0(true, false, false, false, false),
         E1(false, true, false, true, true),
         E2(false, true, true, false, true);

        private boolean startButtonActive;        
        private boolean stopButtonActive;
        private boolean avanceButtonActive;
        private boolean reculeButtonActive;
        private boolean tickTimerActive;

         STATE(boolean startButtonActive, boolean stopButtonActive, boolean avanceButtonActive, boolean reculeButtonActive, boolean tickTimerActive) {
             this.startButtonActive = startButtonActive;
             this.stopButtonActive = stopButtonActive;
             this.avanceButtonActive = avanceButtonActive;
             this.reculeButtonActive = reculeButtonActive;
             this.tickTimerActive = tickTimerActive;
         }

         public boolean isStartButtonActive() {
             return startButtonActive;
         }

         public boolean isStopButtonActive() {
             return stopButtonActive;
         }

         public boolean isAvanceButtonActive() {
             return avanceButtonActive;
         }

         public boolean isReculeButtonActive() {
             return reculeButtonActive;
         }

         public boolean isTickTimerActive() {
             return tickTimerActive;
         }
     }
    
    private STATE etat;
    private int n;
    private Timer tickTimer;

    private void initTimer(){
        tickTimer = new Timer(100, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                tickTimerActionPerformed(e);
            }
        });
    }

    private void tickTimerActionPerformed(ActionEvent e){
        switch (etat){
            case E0 -> {
                //IMPOSSIBLE
            }
            case E1 -> {
                n++;
                afficherLabel();
            }
            case E2 -> {
                n--;
                afficherLabel();
            }
        }
    }
    
    private void afficherLabel(){
        labelN.setText(Integer.toString(n));
    }

    private void updateStatement(){
        this.startButton.setEnabled(this.etat.isStartButtonActive());
        this.stopButton.setEnabled(this.etat.isStopButtonActive());
        this.reculeButton.setEnabled(this.etat.isReculeButtonActive());
        this.avanceButton.setEnabled(this.etat.isAvanceButtonActive());
        if(this.etat.isTickTimerActive()){
            tickTimer.start();
        }else{
            tickTimer.stop();
        }
    }
    private void initStateMachine(){
        this.etat=STATE.E0;
        initTimer();
        updateStatement();
        n=0;
        afficherLabel();
    }
    /**
     * Creates new form compteurAR
     */
    public compteurAR() {
        initComponents();
        initStateMachine();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelN = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        avanceButton = new javax.swing.JButton();
        reculeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compteur Avance-Recule");

        labelN.setText("0");

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        avanceButton.setText("Avance");
        avanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avanceButtonActionPerformed(evt);
            }
        });

        reculeButton.setText("Recule");
        reculeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reculeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(labelN)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(startButton)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(avanceButton)
                        .addGap(31, 31, 31)
                        .addComponent(reculeButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(labelN)
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(stopButton)
                    .addComponent(avanceButton)
                    .addComponent(reculeButton))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        switch(etat){
            case E0 -> {
                this.n = 0;
                afficherLabel();
                this.etat = STATE.E1;
                updateStatement();
            }
            case E1 -> {
                throw new IllegalStateException("Button start pressed on state : E2" );
            }
            case E2 -> {
                throw new IllegalStateException("Button start pressed on state : E3" );
            }
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        switch(etat){
            case E0 -> {
                //IMPOSSIBLE
            }
            case E1, E2 -> {
                labelN.setText("POUF");
                this.etat=STATE.E0;
                updateStatement();
            }
        }
    }//GEN-LAST:event_stopButtonActionPerformed

    private void avanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avanceButtonActionPerformed
        switch (etat) {
            case E0 -> {
                throw new IllegalStateException("Button recule pressed on state : E1");
            }
            case E1 -> {
                //IMPOSSIBLE
            }
            case E2 -> {
                this.etat = STATE.E1;
                updateStatement();
            }//GEN-LAST:event_reculeButtonActionPerformed
        }
    }//GEN-LAST:event_avanceButtonActionPerformed

    private void reculeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reculeButtonActionPerformed
        switch (etat) {
            case E0 -> {
                throw new IllegalStateException("Button recule pressed on state : E1");
            }
            case E1 -> {
                this.etat = STATE.E2;
                updateStatement();
            }
            case E2 -> {
                throw new IllegalStateException("Button recule pressed on state : E3");

            }//GEN-LAST:event_reculeButtonActionPerformed
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(compteurAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(compteurAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(compteurAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(compteurAR.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new compteurAR().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avanceButton;
    private javax.swing.JLabel labelN;
    private javax.swing.JButton reculeButton;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
}
